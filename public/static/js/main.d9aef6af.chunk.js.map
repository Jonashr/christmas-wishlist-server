{"version":3,"sources":["ErrorMessage.js","SantaForm.js","ErrorPage.js","SuccessPage.js","App.js","index.js"],"names":["ErrorMessage","error","type","Typography","variant","color","paragraph","ref","name","className","useStyles","makeStyles","theme","paper","marginTop","spacing","submit","form","margin","formControl","marginBottom","SantaForm","setError","setSuccess","useForm","register","handleSubmit","errors","classes","history","useHistory","onSubmit","formData","a","request","username","wish","axios","post","response","console","log","push","data","status","Container","component","maxWidth","align","Paper","TextField","fullWidth","label","placeholder","id","inputRef","required","maxLength","multiline","rows","Grid","container","justify","Button","padding","paddingTop","ErrorPage","gutterBottom","Link","to","SuccessPage","main","background","palette","secondary","width","height","App","useState","success","CssBaseline","exact","path","render","createMuiTheme","primary","red","green","ReactDOM","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9aef6af.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n  if (error) {\r\n    switch (error.type) {\r\n    case 'required':\r\n      return <Typography variant='subtitle2' color='error' paragraph>Field is required</Typography>\r\n    case 'maxLength':\r\n      if(error.ref.name === 'wish') {\r\n        return <Typography className='notification' color='error' paragraph>Max length is 100 letters</Typography>\r\n      }\r\n      else {\r\n        return <Typography className='notification' color='error'>Max length is 20 letters</Typography>\r\n      }\r\n    default:\r\n      return null\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ErrorMessage from './ErrorMessage'\r\nimport { Container, Typography, Paper, TextField, Button, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(5)\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  form: {\r\n    margin: '2rem 3rem'\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nconst SantaForm = ({ setError, setSuccess }) => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async(formData) => {\r\n    const request = {\r\n      username: formData.username,\r\n      wish: formData.wish\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/wishlist', request)\r\n      console.log('Response', response)\r\n      if(response) {\r\n        setSuccess(true)\r\n        history.push('/success')\r\n      }\r\n    } catch(error) {\r\n      if(error.response.data.error) {\r\n        if(error.response.status === 400) {\r\n          // Older than 10 years\r\n          setError('Unfortunately, santa will not grant the wishes for kids over 10 years. You are too old for writing wishlists to Santa.')\r\n        } else if(error.response.status === 404) {\r\n          // Not found\r\n          setError('This user does not exist. Please make sure that the name has been spelled correctly and try again.')\r\n        } else {\r\n          // Error besides those two occured, generic error message.\r\n          setError('An error occured. Please try again later.')\r\n        }\r\n      } else {\r\n        // Didnt make it to the client\r\n        setError('An error occured when trying to send the wishlist to Santa Claus. Please try again later')\r\n      }\r\n      history.push('/error')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='sm'>\r\n      <Typography variant='h3' component='h1' align='center' color='primary'>A Letter to Santa</Typography>\r\n\r\n      <Paper variant='outlined' className={classes.paper}>\r\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n          <Typography variant='subtitle1' component='h2'>Merry christmas! What do you wish for? Please write down your wish and let santa know what you want!</Typography>\r\n          <div>\r\n            <TextField\r\n              fullWidth\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              name=\"username\"\r\n              label='Your username'\r\n              placeholder=\"charlie.brown\"\r\n              color=\"secondary\"\r\n              id=\"username\"\r\n              error={errors.username ? true : false}\r\n              inputRef={register({ required: true, maxLength: 20 })}\r\n            />\r\n          </div>\r\n          <ErrorMessage error={errors.username} />\r\n          <div>\r\n            <TextField\r\n              name=\"wish\"\r\n              fullWidth\r\n              variant='outlined'\r\n              label=\"Your Wish\"\r\n              multiline\r\n              rows=\"6\"\r\n              className={classes.formControl}\r\n              id=\"wish\"\r\n              error={errors.wish ? true : false}\r\n              placeholder=\"World Peace, Corona Virus Vaccine, Playstation 5\"\r\n              color=\"secondary\"\r\n              inputRef={register({ required: true, maxLength: 100 })}>\r\n            </TextField>\r\n          </div>\r\n          <ErrorMessage error={errors.wish} />\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              className={classes.submit}\r\n              id='wishSubmit'\r\n              type=\"submit\"\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Send your letter\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SantaForm\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Paper, Button, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    padding: '2rem 3rem'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(6)\r\n  }\r\n}))\r\n\r\n\r\nconst ErrorPage = ({ error }) => {\r\n  const classes = useStyles()\r\n\r\n  if (!error) {\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <Container maxWidth='sm' variant='outlined' className={classes.container} >\r\n      <div>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant='h4' component='h1' align='center' color='primary' gutterBottom>エラーが発生しました。</Typography>\r\n          <Typography paragraph>{error}</Typography>\r\n          <Grid container justify=\"center\">\r\n            <Button id='returnHome' variant='contained' component={Link} to='/' color='primary' align='center'>Return to Wishlist</Button>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react'\r\nimport { Link }  from 'react-router-dom'\r\nimport { Container,Paper, Button, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    padding: '2rem 3rem'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(6)\r\n  }\r\n}))\r\n\r\nconst SuccessPage = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Container maxWidth='sm' className={classes.container}>\r\n      <div>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant='h4' component='h1' align='center' color='primary' gutterBottom>Santa has received your wish！</Typography>\r\n          <Typography paragraph align='center'>If you have been a good kid this year...</Typography>\r\n          <Typography paragraph align='center'>Your wish might just be granted!</Typography>\r\n          <Grid container justify=\"center\">\r\n            <Button id='returnHome' variant='contained' component={Link} to='/' color='primary' align='center'>Return to Wishlist</Button>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SuccessPage\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport { Container, CssBaseline } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SantaForm from './SantaForm'\r\nimport ErrorPage from './ErrorPage'\r\nimport SuccessPage from './SuccessPage'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    background: theme.palette.secondary.main,\r\n    width: '100vw',\r\n    height: '100vh'\r\n  }\r\n}))\r\n\r\nconst App = () => {\r\n  const classes = useStyles()\r\n  const [error, setError] = useState(null)\r\n  const [success, setSuccess] = useState(null)\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Container component='main' className={classes.main} maxWidth={false}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <Route\r\n            exact path='/'\r\n            render={() =>\r\n              <SantaForm\r\n                setError={setError}\r\n                setSuccess={setSuccess}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            exact path='/error'\r\n            render={() => error !== null ?\r\n              <ErrorPage\r\n                error={error}\r\n              /> : <Redirect to='/' />\r\n            }\r\n          />\r\n          <Route exact path='/success'\r\n            render={() => success !== null ?\r\n              <SuccessPage/> : <Redirect to='/' />\r\n            }\r\n          />\r\n        </Router>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport { red, green } from '@material-ui/core/colors/'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: red[500],\r\n    },\r\n    secondary: {\r\n      main: green[500]\r\n    },\r\n  },\r\n\r\n})\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}