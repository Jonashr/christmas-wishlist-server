{"version":3,"sources":["ErrorMessage.js","SantaForm.js","ErrorPage.js","SuccessPage.js","App.js","index.js"],"names":["ErrorMessage","error","type","className","SantaForm","setError","setSuccess","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","formData","a","request","username","wish","axios","post","push","response","data","status","name","placeholder","ref","required","rows","cols","maxLength","href","ErrorPage","to","SuccessPage","App","useState","success","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"0RAiBeA,EAfM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,GAAIA,EACF,OAAQA,EAAMC,MACd,IAAK,WACH,OAAO,uBAAGC,UAAU,gBAAb,gBACT,IAAK,YACH,OAAO,uBAAGA,UAAU,gBAAb,oGACT,QACE,OAAO,KAIX,OAAO,MC0DMC,EAlEG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAAgB,EACHC,cAAlCC,EADqC,EACrCA,SAAUC,EAD2B,EAC3BA,aAAcC,EADa,EACbA,OAC1BC,EAAUC,cAEVC,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACTC,EAAU,CACdC,SAAUH,EAASG,SACnBC,KAAMJ,EAASI,MAHF,kBAOUC,IAAMC,KAAK,YAAaJ,GAPlC,gBASXV,GAAW,GACXK,EAAQU,KAAK,aAVF,gDAaV,KAAMC,SAASC,KAAKtB,MACQ,MAA1B,KAAMqB,SAASE,OAEhBnB,EAAS,kUACyB,MAA1B,KAAMiB,SAASE,OAEvBnB,EAAS,4NAGTA,EAAS,4KAIXA,EAAS,4WAEXM,EAAQU,KAAK,UA5BA,yDAAH,sDAgCd,OACE,oCACE,gCACE,uFAKF,8BACE,uBAAGlB,UAAU,QAAb,oOACA,0BAAMU,SAAUJ,EAAaI,IAA7B,iCAEE,2BAAOY,KAAK,WAAWC,YAAY,gBAAgBC,IAAKnB,EAAS,CAACoB,UAAU,MAC5E,kBAAC,EAAD,CAAc3B,MAAOS,EAAOO,WAH9B,eAKE,8BAAUQ,KAAK,OAAOI,KAAK,KAAKC,KAAK,KAAKJ,YAAY,8EAAkBC,IAAKnB,EAAS,CAAEoB,UAAU,EAAMG,UAAW,QACnH,kBAAC,EAAD,CAAc9B,MAAOS,EAAOQ,OAC5B,6BACA,4BAAQhB,KAAK,UAAb,kBAIJ,4CAEE,uBAAG8B,KAAK,sBAAR,UAFF,OC9CSC,EAfG,SAAC,GAAe,IAAbhC,EAAY,EAAZA,MACnB,OAAKA,EAMH,6BACE,kBAAC,IAAD,CAAMiC,GAAG,KAAT,qDACA,iGACA,2BAAIjC,IARC,MCQIkC,EAVK,WAClB,OACE,6BACE,kBAAC,IAAD,CAAMD,GAAG,KAAT,qDACA,kJACA,2KCiCSE,EAlCH,WAAO,IAAD,EACUC,mBAAS,MADnB,mBACTpC,EADS,KACFI,EADE,OAEcgC,mBAAS,MAFvB,mBAETC,EAFS,KAEAhC,EAFA,KAIhB,OACE,yBAAKH,UAAU,OACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEoC,OAAK,EAACC,KAAK,IACXC,OAAQ,kBACN,kBAAC,EAAD,CACEpC,SAAUA,EACVC,WAAYA,OAIlB,kBAAC,IAAD,CACEiC,OAAK,EAACC,KAAK,SACXC,OAAQ,kBAAgB,OAAVxC,EACZ,kBAAC,EAAD,CACEA,MAAOA,IACJ,kBAAC,IAAD,CAAUiC,GAAG,SAGtB,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAChBC,OAAQ,kBAAkB,OAAZH,EACZ,kBAAC,EAAD,MAAiB,kBAAC,IAAD,CAAUJ,GAAG,YC7B5CQ,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5238e12c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n  if (error) {\r\n    switch (error.type) {\r\n    case 'required':\r\n      return <p className='notification'>必須</p >\r\n    case 'maxLength':\r\n      return <p className='notification'>願いは１００文字までお願いします</p>\r\n    default:\r\n      return null\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nconst SantaForm = ({ setError, setSuccess}) => {\r\n  const { register, handleSubmit, errors} = useForm()\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async(formData) => {\r\n    const request = {\r\n      username: formData.username,\r\n      wish: formData.wish\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/wishlist', request)\r\n      if(response) {\r\n        setSuccess(true)\r\n        history.push('/success')\r\n      }\r\n    } catch(error) {\r\n      if(error.response.data.error) {\r\n        if(error.response.status === 400) {\r\n          // Older than 10 years\r\n          setError('残念ながら君はもう１０歳を超えていて、大きな子になってしまいましたので、サンタさんは君の願いを叶えません。')\r\n        } else if(error.response.status === 404) {\r\n          // Not found\r\n          setError('ユーザは存在しません。もう一度ユーザー名を確認して、やり直してください。')\r\n        } else {\r\n          // Error besides those two occured, generic error message.\r\n          setError('エラーが発生しまいました。後ほどまたやり直してください。')\r\n        }\r\n      } else {\r\n        // Didnt make it to the client\r\n        setError('申し訳ございませんがサンタさんはただいま大変忙しいので、サンタさんに連絡できませんでした。後ほどまたやり直してください。')\r\n      }\r\n      history.push('/error')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>\r\n          サンタさんへの手紙\r\n        </h1>\r\n      </header>\r\n  \r\n      <main>\r\n        <p className=\"bold\">メリークリスマス! クリスマスは何が欲しいですか。自分の願いを書いてください！</p>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          お名前は？\r\n          <input name=\"username\" placeholder=\"charlie.brown\"　ref={register({required: true})}/>\r\n          <ErrorMessage error={errors.username} />\r\n          願い\r\n          <textarea name=\"wish\" rows=\"10\" cols=\"45\" placeholder=\"世界平和、チーズケーキ、PS5\" ref={register({ required: true, maxLength: 100})}></textarea>\r\n          <ErrorMessage error={errors.wish} />\r\n          <br/>\r\n          <button type=\"submit\">確定</button>\r\n        </form>\r\n      </main>\r\n  \r\n      <footer>\r\n        Made with\r\n        <a href=\"https://glitch.com\">Glitch</a>!\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SantaForm\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ErrorPage = ({ error }) => {\r\n  if (!error) {\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/'> 前のページへ戻る</Link>\r\n      <p>エラーが発生しました。</p>\r\n      <p>{error}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react'\r\nimport { Link }  from 'react-router-dom'\r\n\r\nconst SuccessPage = () => {\r\n  return (\r\n    <div>\r\n      <Link to='/'> 前のページへ戻る</Link>\r\n      <h1>サンタさんはあなたの願いを貰いました！</h1>\r\n      <p>今年は良い子でしたら、願いが叶うかもしれません</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessPage\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport './styles.css'\nimport SantaForm from './SantaForm'\nimport ErrorPage from './ErrorPage'\nimport SuccessPage from './SuccessPage'\n\nconst App = () => {\n  const [error, setError] = useState(null)\n  const [success, setSuccess] = useState(null)\n\n  return (\n    <div className=\"App\">\n        <Router>\n          <Route\n            exact path='/'\n            render={() =>\n              <SantaForm \n                setError={setError}\n                setSuccess={setSuccess}\n              />\n          }\n          />\n          <Route\n            exact path='/error'\n            render={() => error !== null ?\n              <ErrorPage \n                error={error}\n              /> : <Redirect to='/' />\n            }\n          />\n          <Route exact path='/success'\n            render={() => success !== null ? \n              <SuccessPage/> : <Redirect to='/' />\n            }\n          />\n        </Router>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}